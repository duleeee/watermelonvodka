{"version":3,"sources":["assets/party.jpg","pages/HomePage.js","pages/GenderSelection.js","pages/DateSelection.js","pages/ParticipantDetails.js","pages/AdminPage.js","pages/PaymentPage.js","pages/Introduction.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","HomePage","navigate","useNavigate","handleSexSelection","sex","concat","React","createElement","className","onClick","GenderSelection","Link","to","DateSelection","_ref","selectedSex","availableDates","setAvailableDates","useState","useEffect","available","Object","keys","participantData","filter","date","participants","males","p","length","females","console","log","style","backgroundImage","partyImage","map","key","handleSelectDate","Date","toLocaleDateString","weekday","day","month","replace","formatDate","ParticipantDetails","step","setStep","setParticipants","team","name","email","drinkingName","allParticipants","setAllParticipants","availability","setAvailability","nameError","setNameError","emailError","setEmailError","location","useLocation","URLSearchParams","search","get","handleChange","e","value","target","prev","newParticipants","handleNext","trim","split","test","type","onChange","async","newAvailability","newParticipant","participantSex","alert","push","response","fetch","method","headers","body","JSON","stringify","participantEmail","ok","Error","statusText","data","text","error","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","provider","GoogleAuthProvider","AdminPage","user","setUser","events","setEvents","onAuthStateChanged","currentUser","fetchEvents","eventsData","getDocs","collection","docs","doc","displayName","signOut","event","index","signInWithPopup","PaymentPage","state","totalAmount","axios","post","amount","currency","checkout_reference","description","merchant_code","return_url","callback_url","window","href","checkout_url","createCheckout","Introduction","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cae176f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/party.71cc0b97.jpg\";","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './HomePage.css'; // Import the CSS file for styling\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n\n  const handleSexSelection = (sex) => {\n    navigate(`/dates?sex=${sex}`);\n  };\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"content\">\n        <h1>WATERMELON BEACH OUTING AND PARTY</h1>\n        <p>Select your sex:</p>\n        <div className=\"button-container\">\n          <button className=\"selection-button\" onClick={() => handleSexSelection('male')}>Male</button>\n          <button className=\"selection-button\" onClick={() => handleSexSelection('female')}>Female</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst GenderSelection = () => {\n  return (\n    <div>\n      <h2>What's your sex:</h2>\n      <Link to=\"/dates?gender=male\"><button>A Male</button></Link>\n      <Link to=\"/dates?gender=female\"><button>A Female</button></Link>\n    </div>\n  );\n};\n\nexport default GenderSelection;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport participantData from '../participants.json'; // Import the JSON data\nimport partyImage from '../assets/party.jpg'; // Ensure this path is correct\nimport './DatesPage.css';\n\nconst DateSelection = ({ selectedSex }) => {\n  const [availableDates, setAvailableDates] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const dates = Object.keys(participantData);\n    const available = dates.filter(date => {\n      const { participants } = participantData[date];\n      const males = participants.filter(p => p.sex === 'male').length;\n      const females = participants.filter(p => p.sex === 'female').length;\n      const total = participants.length;\n\n      if (total >= 28 || (selectedSex === 'male' && males >= 16) || (selectedSex === 'female' && females >= 28)) {\n        return false;\n      }\n      return true;\n    });\n    setAvailableDates(available);\n    console.log('Available dates:', available);\n  }, [selectedSex]);\n\n  const formatDate = (date) => {\n    const options = { weekday: 'long', day: 'numeric', month: 'long' };\n    const formattedDate = new Date(date).toLocaleDateString('en-US', options);\n    return formattedDate.replace(/, \\d{4}/, ''); // Remove the year\n  };\n\n  const handleSelectDate = (date) => {\n    navigate(`/participant-details?date=${date}`);\n  };\n\n  return (\n    <div className=\"dates-page\">\n      <div className=\"background-image\" style={{ backgroundImage: `url(${partyImage})` }} />\n      <div className=\"content\">\n        <h2>Choose available date:</h2>\n        <div className=\"dates-container\">\n          {availableDates.length > 0 ? (\n            availableDates.map(date => (\n              <button key={date} className=\"date-button\" onClick={() => handleSelectDate(date)}>\n                {formatDate(date)}\n              </button>\n            ))\n          ) : (\n            <p>No available dates</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DateSelection;\n\n\n// v2.0","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport participantData from '../participants.json';\nimport './ParticipantDetails.css';\n\nconst ParticipantDetails = () => {\n  const [step, setStep] = useState(0);\n  const [participants, setParticipants] = useState([{ team: '', sex: '', date: '', name: '', email: '', drinkingName: '' }]);\n  const [allParticipants, setAllParticipants] = useState([]);\n  const [availability, setAvailability] = useState({});\n  const [nameError, setNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n  const date = query.get('date');\n\n  useEffect(() => {\n    if (!participantData[date]) {\n      navigate('/dates');\n      return;\n    }\n    const { participants } = participantData[date];\n    const males = participants.filter(p => p.sex === 'male').length;\n    const females = participants.filter(p => p.sex === 'female').length;\n    setAvailability({ males, females, participants });\n    console.log('Initial Availability:', { males, females, participants });\n  }, [date, navigate]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setParticipants(prev => {\n      const newParticipants = [...prev];\n      newParticipants[0][name] = value;\n      console.log('Updated Participants:', newParticipants);\n      return newParticipants;\n    });\n  };\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleNext = () => {\n    if (step === 1) { // Validate name at step 1\n      const nameParts = participants[0].name.trim().split(/\\s+/);\n      if (nameParts.length !== 2) {\n        setNameError('Please enter your first and last name.');\n        return;\n      }\n      setNameError('');\n    } else if (step === 2) { // Validate email at step 2\n      if (!validateEmail(participants[0].email)) {\n        setEmailError('Please enter a valid email address.');\n        return;\n      }\n      setEmailError('');\n    }\n    setStep(prev => prev + 1);\n    console.log('Next step:', step + 1);\n  };\n\n  const handleFinish = async () => {\n    console.log('handleFinish triggered');\n    const newAvailability = { ...availability };\n    const newParticipant = participants[0];\n    const participantSex = newParticipant.sex;\n\n    if (participantSex === 'male' && newAvailability.males >= 16) {\n      alert(\"No more slots available for males.\");\n      return;\n    } else if (participantSex === 'female' && newAvailability.females >= 28) {\n      alert(\"No more slots available for females.\");\n      return;\n    }\n\n    if (participantSex === 'male') {\n      newAvailability.males += 1;\n    } else {\n      newAvailability.females += 1;\n    }\n\n    newAvailability.participants.push(newParticipant);\n    setAvailability(newAvailability);\n\n    setAllParticipants(prev => [...prev, newParticipant]);\n    console.log('Final Participants:', allParticipants.concat(newParticipant));\n\n    // Send email with participant details\n    try {\n      const response = await fetch('http://localhost:5000/send-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          participants: allParticipants.concat(newParticipant),\n          date,\n          participantEmail: newParticipant.email,\n          drinkingName: newParticipant.drinkingName\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n      const data = await response.text();\n      console.log('Email API response:', data);\n      alert(`Thank you for signing up! We have sent a confirmation email to ${newParticipant.email}.`);\n\n      // Redirect to confirmation page\n      setStep(4);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"participant-details\">\n      {step === 0 && (\n        <div className=\"content\">\n          <h2>Select your team</h2>\n          <div className=\"button-container\">\n            <button className=\"selection-button\" onClick={() => { handleChange({ target: { name: 'team', value: 'hostel mint' } }); setStep(1); }}>Hostel Mint</button>\n            <button className=\"selection-button\" onClick={() => { handleChange({ target: { name: 'team', value: 'team beach' } }); setStep(1); }}>Team Beach</button>\n            <button className=\"selection-button\" onClick={() => { handleChange({ target: { name: 'team', value: 'other' } }); setStep(1); }}>Other</button>\n          </div>\n        </div>\n      )}\n      {step === 1 && (\n        <div className=\"content\">\n          <h2>Your first and last name</h2>\n          <input type=\"text\" name=\"name\" value={participants[0].name} onChange={handleChange} />\n          {nameError && <p className=\"error-message\">{nameError}</p>}\n          <div className=\"button-container\">\n            <button className=\"selection-button\" onClick={handleNext}>Next</button>\n          </div>\n        </div>\n      )}\n      {step === 2 && (\n        <div className=\"content\">\n          <h2>What's your email, {participants[0].name.split(' ')[0]}?</h2>\n          <input type=\"email\" name=\"email\" value={participants[0].email} onChange={handleChange} />\n          {emailError && <p className=\"error-message\">{emailError}</p>}\n          <div className=\"button-container\">\n            <button className=\"selection-button\" onClick={() => setStep(1)}>Back</button>\n            <button className=\"selection-button\" onClick={handleNext}>Next</button>\n          </div>\n        </div>\n      )}\n      {step === 3 && (\n        <div className=\"content\">\n          <h2>What's your drinking name?</h2>\n          <p>If you don't have a drinking name, invent one; how would your friends call you when you drink?</p>\n          <input type=\"text\" name=\"drinkingName\" value={participants[0].drinkingName} onChange={handleChange} />\n          <div className=\"button-container\">\n            <button className=\"selection-button\" onClick={() => setStep(2)}>Back</button>\n            <button className=\"selection-button\" onClick={handleNext}>Next</button>\n          </div>\n        </div>\n      )}\n      {step === 4 && (\n        <div className=\"content\">\n          <h2>Confirmation</h2>\n          <p>Please proceed to the front desk of the Hostel Mint or the Hostel Beach to pay for the event. The price is 12 euros per person for hostel guests. Please show them this screen, {participants[0].drinkingName}, or the confirmation email we have just sent you.</p>\n          <div className=\"button-container\">\n            <button className=\"selection-button\" onClick={handleFinish}>Finish</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ParticipantDetails;\n","import React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\n\n// Your Firebase configuration object\nconst firebaseConfig = {\n\n  apiKey: \"AIzaSyBJIZ3bJV1oxVpcfViHVtLGCI-KsW2YaXc\",\n\n  authDomain: \"watermellon-party.firebaseapp.com\",\n\n  projectId: \"watermellon-party\",\n\n  storageBucket: \"watermellon-party.appspot.com\",\n\n  messagingSenderId: \"862865095732\",\n\n  appId: \"1:862865095732:web:bd5eda2d64365d68925e61\"\n\n};\n\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst provider = new GoogleAuthProvider();\n\nconst AdminPage = () => {\n  const [user, setUser] = useState(null);\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (currentUser) => {\n      if (currentUser) {\n        setUser(currentUser);\n        fetchEvents();\n      } else {\n        setUser(null);\n      }\n    });\n  }, []);\n\n  const handleLogin = async () => {\n    try {\n      await signInWithPopup(auth, provider);\n    } catch (error) {\n      console.error('Error during sign-in:', error);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error('Error during sign-out:', error);\n    }\n  };\n\n  const fetchEvents = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"events\"));\n      const eventsData = querySnapshot.docs.map(doc => doc.data());\n      setEvents(eventsData);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Admin Page</h2>\n      {user ? (\n        <div>\n          <p>Welcome, {user.displayName}</p>\n          <button onClick={handleLogout}>Logout</button>\n          <h3>Upcoming Events</h3>\n          <ul>\n            {events.map((event, index) => (\n              <li key={index}>{event.name} - {event.date}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <button onClick={handleLogin}>Login with Google</button>\n      )}\n    </div>\n  );\n};\n\nexport default AdminPage;\n","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst PaymentPage = () => {\n  const location = useLocation();\n  const { participants, sex, date } = location.state || {};\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!participants || !sex || !date) {\n      navigate('/');\n      return;\n    }\n\n    const totalAmount = participants.length * 12; // 12 euros per person\n\n    const createCheckout = async () => {\n      try {\n        const response = await axios.post('https://api.sumup.com/v0.1/checkouts', {\n          amount: totalAmount,\n          currency: 'EUR',\n          checkout_reference: 'order123',\n          description: `Watermelon Beach Outing and Party - ${participants.length} participants`,\n          merchant_code: 'YOUR_MERCHANT_CODE',\n          return_url: 'https://yourwebsite.com/payment-success',\n          callback_url: 'https://yourwebsite.com/payment-callback'\n        }, {\n          headers: {\n            'Authorization': `Bearer YOUR_ACCESS_TOKEN`,\n            'Content-Type': 'application/json'\n          }\n        });\n        window.location.href = response.data.checkout_url;\n      } catch (error) {\n        console.error('Error creating checkout:', error);\n      }\n    };\n\n    createCheckout();\n  }, [participants, sex, date, navigate]);\n\n  return (\n    <div>\n      <h2>Processing Payment...</h2>\n    </div>\n  );\n};\n\nexport default PaymentPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Introduction.css';\n\nconst Introduction = () => {\n  return (\n    <div className=\"introduction-page\">\n      <div className=\"contentw\">\n        <h1>Watermelon Beach Party</h1>\n        <h2>What is it?</h2>\n        <p>It's a drinking game, or as some would call it, a drinking sport. Two teams, each half male, half female, compete to see who can drink more Vodka and Fanta from a drunk watermelon on the beach. Team Beach and Hostel Mint have 24 contestants total, 12 in each team, 6 male and 6 female. Each contestant has a number written on their shoulder from 1 to 12 and their drinking name written on their arm.</p>\n        <h2>How it Works:</h2>\n        <p>The coach picks a number, and the contestants with that number from both teams run across the beach (like 10 meters, don't worry) to drink from the watermelon placed between the two teams. The contestant who gets drunk first wins. Needless to say, we are expecting male winners and lots of fun. :)</p>\n        <h2>Schedule:</h2>\n        <p>\n          <strong>Start Time:</strong> The outing starts at about 16:00. We will begin gathering on the beach to get some sun and hydrate or something.<br />\n          <strong>Game Start:</strong> The games will begin at about 19:15.\n        </p>\n        <h2>Event Location:</h2>\n        <p>\n          <strong>Location:</strong> Our next event is in Split, Croatia, on Tuesday, June 25th, at Kasjuni Beach. It is a must-see beach located west of the city, right next to Marjan Hill. The place features a DJ on the beach, beds, and a bar.\n        </p>\n        <h2>Post-Event Plans:</h2>\n        <p>\n          <strong>After-Event:</strong> After the event, we will visit some bars near Diocletian's Palace.\n        </p>\n        <h2>Participation Details:</h2>\n        <p>\n          <strong>Sign-Up:</strong> The signup sheet is at the front desk.<br />\n          <strong>Cost:</strong> The cover is 20 euros per person (12 euros for hostel guests of the Beach and Mint hostels), which includes the game (and obviously, lots of drinking from the watermelon).\n        </p>\n      </div>\n      <div className=\"button-container\">\n        <Link to=\"/home\"><button className=\"signup-button\">Sign me up</button></Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Introduction;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport GenderSelection from './pages/GenderSelection';\nimport DateSelection from './pages/DateSelection';\nimport ParticipantDetails from './pages/ParticipantDetails';\nimport AdminPage from './pages/AdminPage';\nimport PaymentPage from './pages/PaymentPage';\nimport Introduction from './pages/Introduction';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Introduction />} />\n        <Route path=\"home\" element={<HomePage />} />\n        <Route path=\"/gender\" element={<GenderSelection />} />\n        <Route path=\"/dates\" element={<DateSelection />} />\n        <Route path=\"/participant-details\" element={<ParticipantDetails />} />\n        <Route path=\"/admin\" element={<AdminPage />} />\n        <Route path=\"/payment\" element={<PaymentPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}